import Head from "next/head";

import React, { useContext, useEffect, useState } from "react";
import { SiGithubactions } from "react-icons/si";
import Actions from "~/components/admin/actions";
import { AdminDataContext } from "~/context/adminContext";
import { headerType } from "~/hooks/admin/helper";

function Config() {
  const [renderdScreen, setRenderdScreen] = useState("main");
  return (
    <div className={"flex flex-col items-center justify-center"}>
      <Head>
        <title> הגדרות גת אביגדור UI</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main dir="rtl" className="flex h-screen w-screen flex-col items-center">
        <div className="mb-8 flex flex-row-reverse justify-center gap-6">
          <Actions />
          <h1 className="flex text-sm font-extrabold tracking-tight text-white ">
            Bizi
            <span className="text-[hsl(280,100%,70%)]">row</span>{" "}
            <span>
              {" "}
              <SiGithubactions />
            </span>
          </h1>
          {renderdScreen != "main" && (
            <a
              className="flex max-w-xs flex-col  rounded-xl bg-white/10  text-white hover:bg-white/20"
              onClick={() => setRenderdScreen("main")}
              target="_blank"
            >
              <h3 className="text-2xl font-bold">מסך הגדרות →</h3>
            </a>
          )}
        </div>
        {renderdScreen == "main" && (
          <div className="flex flex-col justify-center">
            <a
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              onClick={() => setRenderdScreen("headers")}
              target="_blank"
            >
              <h3 className="text-2xl font-bold">הגדרות שורה →</h3>
              <div className="text-lg">
                הגדר כותרות חלופיות, עמודות מוסתרות ועוד...
              </div>
            </a>
          </div>
        )}
        {renderdScreen == "headers" && (
          <div className="flex w-full justify-center ">
            <HeadersTable />
          </div>
        )}
      </main>
    </div>
  );
}

export default Config;

const nameHashing = {
    initialName:"שם מקורי",
    replacmentName:"שם חלופי",
    toShow:"להראות"
}


const HeadersTable = () => {
  const { headers, setHeaders } = useContext(AdminDataContext);
  const [configHeaders, setConfigHeaders] = useState<
    headerType[] | undefined
  >();
  useEffect(() => {
    if (headers) setConfigHeaders([...headers]);
  }, [headers]);

  return (
    <>
      <div className="flex w-8/12 flex-col gap-4 border-2 border-pink-300">
        <div className="flex w-full justify-center ">
          {headers &&
            Object.keys(headers[0] ?? {}).map((h: string) => (
              <p className="w-1/4 text-center">{h}</p>
            ))}
        </div>

        {configHeaders &&
          configHeaders.map((header) => (
            <div className="flex w-full justify-center ">
              {Object.values(header).map((cell,index) => {
               if( Object.keys( configHeaders[0] ?? {})[index] == "replacmentName")
               return <input value={cell} type="text"></input>
               if( Object.keys( configHeaders[0] ?? {})[index] == "toShow")
               return <input  type="checkbox"/>
               <p className=" w-1/3 text-center">{cell}</p>
              })}{" "}
            </div>
          ))}
      </div>
    </>
  );
};
